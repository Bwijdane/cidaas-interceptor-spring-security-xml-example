<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
          http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="de.cidaas" />
	<context:annotation-config />

	<http pattern="/**" auto-config='false' create-session="stateless"
		entry-point-ref="entryPoint" use-expressions="true">

	 
		
		<intercept-url pattern="/v1/**" access="isAuthenticated()" />
		<intercept-url pattern="/public/calendar"  access="permitAll" />
		<intercept-url pattern="/leavetype" method="OPTIONS" access="denyAll()" />
		<intercept-url pattern="/myprofile" access="isAuthenticated()" />
		<intercept-url pattern="/api/employeelist" access="hasRole('HR')" />
		<intercept-url pattern="/api/holidaylist" access="hasAuthority('holidaylist:read')" />
		

		<custom-filter ref="optionsFilter" before="BASIC_AUTH_FILTER" />
		<custom-filter ref="tokenFilter" after="BASIC_AUTH_FILTER" />
		<csrf disabled="true" />
	</http>

	<beans:bean id="optionsFilter" class="de.cidaas.config.OptionsFilter" />

	<beans:bean id="entryPoint"
		class="org.springframework.security.web.authentication.HttpStatusEntryPoint">
		<beans:constructor-arg name="httpStatus">
			<beans:value type="org.springframework.http.HttpStatus">UNAUTHORIZED</beans:value>
		</beans:constructor-arg>
	</beans:bean>

	<!-- Authentication manager -->
	<authentication-manager alias="authenticationManager">
		<!-- Access token -->
		<authentication-provider ref="tokenAuthenticationProvider" />
	</authentication-manager>

	<!-- Token authentication provider -->
	<beans:bean id="tokenAuthenticationProvider"
		class="de.cidaas.config.TokenAuthenticationProvider" />

	<!-- OAuth2 Token authentication filter -->
	<beans:bean id="tokenFilter" class="de.cidaas.config.TokenFilterBean" />

</beans:beans>
